<launch>
  <arg name="initial_pose_x" default="0"/>
  <arg name="initial_pose_y" default="0"/>
  <arg name="initial_pose_z" default="0"/>
  <arg name="initial_pose_yaw" default="0"/>
  <arg name="robot_name" default="robot1"/>
  <arg name="tf_prefix" default="$(arg robot_name)"/>


  <arg name="init_pose" value="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -z $(arg initial_pose_z) -Y $(arg initial_pose_yaw)" />
  
  <!-- Load the URDF into the ROS Parameter Server -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find p3dx_description)/urdf/pioneer3dx.xacro' prefix:=$(arg robot_name)" />

  <!-- Gazebo model spawner -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="$(arg init_pose) -unpause -urdf -param robot_description -model $(arg robot_name)" respawn="false" output="screen"/>


  <rosparam command="load" file="$(find multirobot_coverage)/config/diff_drive_control.yaml" />
  <param name="p3dx_velocity_controller/odom_frame_id" type="string" value="$(arg robot_name)/odom"/>
  <param name="p3dx_velocity_controller/base_frame_id" type="string" value="$(arg robot_name)/base_link"/>
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" type="string" value="$(arg robot_name)" />
  </node>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller p3dx_velocity_controller --shutdown-timeout 1"/>
  <remap from="$(arg robot_name)/p3dx_velocity_controller/odom" to="$(arg robot_name)/odom"/>
  <remap from="$(arg robot_name)/p3dx_velocity_controller/cmd_vel" to="$(arg robot_name)/cmd_vel"/>

  <!-- The odometry estimator, throttling, fake laser etc. go here -->
  <!-- All the stuff as from usual robot launch file -->
  <!-- <include file="$(find multirobot_coverage)/launch/move_base.launch" >
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="init_pose" value="$(arg init_pose)" />
  </include> -->

  <!--AMCL-->
  <include file="$(find multirobot_coverage)/launch/amcl.launch">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_yaw)"/>
    <arg name="odom_frame_id" value="$(arg robot_name)/odom"/>
    <arg name="base_frame_id" value="$(arg robot_name)/base_link"/>
    <arg name="scan_topic"    value="/$(arg robot_name)/scan"/>
  </include>

</launch>
